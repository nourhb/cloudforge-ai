name: 📚 Auto-Sync Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - 'frontend/**'
      - 'ai-scripts/**'
      - 'helm-chart/**'
      - 'infra/**'
  pull_request:
    branches: [ main ]

jobs:
  sync-documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📝 Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra
        sudo apt-get install -y texlive-pictures texlive-science
    
    - name: 🔍 Check for App Changes
      id: changes
      run: |
        echo "backend_changed=$(git diff --name-only HEAD~1 HEAD | grep -q '^backend/' && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "frontend_changed=$(git diff --name-only HEAD~1 HEAD | grep -q '^frontend/' && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "ai_changed=$(git diff --name-only HEAD~1 HEAD | grep -q '^ai-scripts/' && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
    
    - name: 📚 Update LaTeX Documentation
      if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.frontend_changed == 'true' || steps.changes.outputs.ai_changed == 'true'
      run: |
        cd latex
        
        # Update timestamp in relevant chapters
        if [ "${{ steps.changes.outputs.backend_changed }}" = "true" ]; then
          echo "% Backend updated: $(date)" >> chapters/04_architecture.tex
        fi
        
        if [ "${{ steps.changes.outputs.frontend_changed }}" = "true" ]; then
          echo "% Frontend updated: $(date)" >> chapters/07_sprint_03.tex
        fi
        
        if [ "${{ steps.changes.outputs.ai_changed }}" = "true" ]; then
          echo "% AI/ML updated: $(date)" >> chapters/06_sprint_02.tex
        fi
    
    - name: 🔨 Compile LaTeX to PDF
      run: |
        cd latex
        pdflatex -interaction=nonstopmode main_fixed.tex || true
        pdflatex -interaction=nonstopmode main_fixed.tex || true
        
        if [ -f "main_fixed.pdf" ]; then
          echo "✅ PDF compiled successfully"
          ls -lh main_fixed.pdf
        else
          echo "❌ PDF compilation failed"
          exit 1
        fi
    
    - name: 📤 Commit Updated Documentation
      if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.frontend_changed == 'true' || steps.changes.outputs.ai_changed == 'true'
      run: |
        git config --global user.name 'Documentation Bot'
        git config --global user.email 'docs-bot@cloudforge-ai.com'
        
        git add latex/
        
        if git diff --staged --quiet; then
          echo "No documentation changes to commit"
        else
          git commit -m "docs: auto-sync documentation with app changes
          
          - Backend changes: ${{ steps.changes.outputs.backend_changed }}
          - Frontend changes: ${{ steps.changes.outputs.frontend_changed }}  
          - AI/ML changes: ${{ steps.changes.outputs.ai_changed }}
          
          Auto-generated by GitHub Actions"
          
          git push
        fi
    
    - name: 📋 Generate Documentation Report
      run: |
        echo "## 📚 Documentation Sync Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Changed | Action Taken |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|--------------|" >> $GITHUB_STEP_SUMMARY
        echo "| Backend | ${{ steps.changes.outputs.backend_changed }} | $([ '${{ steps.changes.outputs.backend_changed }}' = 'true' ] && echo 'Updated architecture docs' || echo 'No action') |" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend | ${{ steps.changes.outputs.frontend_changed }} | $([ '${{ steps.changes.outputs.frontend_changed }}' = 'true' ] && echo 'Updated UI docs' || echo 'No action') |" >> $GITHUB_STEP_SUMMARY
        echo "| AI/ML | ${{ steps.changes.outputs.ai_changed }} | $([ '${{ steps.changes.outputs.ai_changed }}' = 'true' ] && echo 'Updated ML docs' || echo 'No action') |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "latex/main_fixed.pdf" ]; then
          PDF_SIZE=$(ls -lh latex/main_fixed.pdf | awk '{print $5}')
          echo "✅ **PDF Status:** Successfully compiled ($PDF_SIZE)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **PDF Status:** Compilation failed" >> $GITHUB_STEP_SUMMARY
        fi