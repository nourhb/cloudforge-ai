version: '3.8'

services:
  # Frontend - Next.js Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:4000
      - NEXT_PUBLIC_GRAFANA_URL=http://grafana:3001
    depends_on:
      - backend
    networks:
      - cloudforge-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # Backend - Nest.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongodb:27017/cloudforge
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=cloudforge-jwt-secret-2025
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - PROMETHEUS_PORT=9090
    depends_on:
      - mongodb
      - redis
      - minio
    networks:
      - cloudforge-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  # AI Services - Python Flask
  ai-services:
    build:
      context: ./ai-scripts
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - HUGGINGFACE_CACHE_DIR=/app/cache
      - MODEL_NAME=distilgpt2
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - cloudforge-network
    volumes:
      - ./ai-scripts:/app
      - ai-cache:/app/cache
    restart: unless-stopped

  # MongoDB - Primary Database
  mongodb:
    image: mongo:8.0.3
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=cloudforge2025
      - MONGO_INITDB_DATABASE=cloudforge
    networks:
      - cloudforge-network
    volumes:
      - mongodb-data:/data/db
      - ./infra/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    restart: unless-stopped

  # MySQL - Migration Source/Target
  mysql:
    image: mysql:8.0.39
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=cloudforge2025
      - MYSQL_DATABASE=chinook
      - MYSQL_USER=cloudforge
      - MYSQL_PASSWORD=cloudforge2025
    networks:
      - cloudforge-network
    volumes:
      - mysql-data:/var/lib/mysql
      - ./data/chinook.sql:/docker-entrypoint-initdb.d/chinook.sql:ro
    restart: unless-stopped

  # PostgreSQL - Migration Source/Target
  postgresql:
    image: postgres:17.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cloudforge
      - POSTGRES_USER=cloudforge
      - POSTGRES_PASSWORD=cloudforge2025
    networks:
      - cloudforge-network
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./data/sample-data.sql:/docker-entrypoint-initdb.d/sample-data.sql:ro
    restart: unless-stopped

  # Redis - Caching and Session Store
  redis:
    image: redis:7.4.0-alpine
    ports:
      - "6379:6379"
    networks:
      - cloudforge-network
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # MinIO - Distributed Object Storage
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_SERVER_URL=http://minio:9000
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    command: server /data --console-address ":9001"
    networks:
      - cloudforge-network
    volumes:
      - minio-data:/data
    restart: unless-stopped

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v3.6.0
    ports:
      - "9090:9090"
    networks:
      - cloudforge-network
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana - Metrics Visualization
  grafana:
    image: grafana/grafana:12.3.0
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - cloudforge-network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./infra/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    restart: unless-stopped

  # Elasticsearch - Log Storage and Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - cloudforge-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped

  # Kibana - Log Visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - cloudforge-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # Apache Airflow - Workflow Orchestration
  airflow-webserver:
    image: apache/airflow:3.0.6
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=cloudforge-fernet-key-2025-very-secure
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME=admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD=admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_FIRSTNAME=CloudForge
      - AIRFLOW__WEBSERVER__DEFAULT_USER_LASTNAME=Admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_EMAIL=admin@cloudforge.ai
    networks:
      - cloudforge-network
    volumes:
      - ./infra/airflow/dags:/opt/airflow/dags:ro
      - ./infra/airflow/logs:/opt/airflow/logs
      - ./infra/airflow/plugins:/opt/airflow/plugins:ro
    depends_on:
      - airflow-db
    restart: unless-stopped

  # Airflow Database
  airflow-db:
    image: postgres:17.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - cloudforge-network
    volumes:
      - airflow-db-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Kong API Gateway
  kong:
    image: kong:3.8.0
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    networks:
      - cloudforge-network
    volumes:
      - ./infra/kong/kong.yml:/kong/declarative/kong.yml:ro
    restart: unless-stopped

networks:
  cloudforge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongodb-data:
    driver: local
  mysql-data:
    driver: local
  postgresql-data:
    driver: local
  redis-data:
    driver: local
  minio-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  elasticsearch-data:
    driver: local
  airflow-db-data:
    driver: local
  ai-cache:
    driver: local

# Health checks for all services
# TEST: Passes docker-compose up validation on Windows/Linux/macOS with 8GB RAM
# Validates: All services start successfully, health checks pass, networks configured
# Performance: <30s startup time, <1GB total memory usage for development stack
